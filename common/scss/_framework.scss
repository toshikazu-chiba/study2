@charset "utf-8";
@import "_config";

// media query
// $target
	// tablet: タブレット設定用
	// sp: スマホ設定用
@mixin media_query ($media_type, $target) {
	$targetArea: '';
	@if $target == 'tablet' {
		$targetArea: "(min-width: #{$document_width}) and (max-width: #{$sp_document_width})";
	} @else if $target == 'sp' {
		$targetArea: "(max-width: #{$sp_document_width})";
	}
	@media #{$media_type} and #{$targetArea} {
		@content;
	}
}

// デバイススイッチ
@mixin device_switch ($activeDevice, $displayType) {
	// PC
	@if ($activeDevice == 'pc') {
		display: #{$displayType};
		@include media_query ('screen', 'sp') {
			display: none;
		}
	}
	// SP
	@else if ($activeDevice == 'sp') {
		display: none;
		@include media_query ('screen', 'sp') {
			display: #{$displayType};
		}
	}
}

// 三角形作成
	// direction:
		// top: 上向き
		// right: 右向き
		// bottom: 下向き
		// left: 左向き
@mixin tri ($width, $height, $color, $direction) {
	display: block;
	width: 0;
	height: 0;
	border-style: solid;
	border-color: transparent transparent $color transparent;
	border-width: 0 $width/2 $height $width/2;
	@if ($direction == 'top') {
		transform: rotate(0);
	}
	@elseif ($direction == 'right') {
		transform: rotate(90deg);
	}
	@elseif ($direction == 'bottom') {
		transform: rotate(180deg);
	}
	@elseif ($direction == 'left') {
		transform: rotate(270deg);
	}
}

// ボタン
	// $icon: アイコン有無
		// true: 有り
		// false: なし
	// $iconWidth: アイコンの幅
		// pxで設定
	// $position: アイコンとテキストの水平方向の配置
		// 左揃え: left
		// 中央揃え: center
		// アイコンだけ左揃え: icon_left
	// $direction: アイコン縦並びor横並び
		// 縦: vertical
		// 横: inline
@mixin btn ($icon, $iconWidth, $iconHeight, $position, $direction) {
	&.common_btn {
		display: inline-block;
		vertical-align: top;
		@if ($icon == 'true') {
			& > .common_btn_container {
				@if ($direction == 'inline') {
					display: flex;
					@if ($position == 'left') {
						justify-content: flex-start;
					}
					@else if ($position == 'center' or $position == 'icon_left') {
						justify-content: center;
					}
					align-items: center;
				}
				@else if ($direction == 'vertical') {
					display: block;
				}
				& > .common_btn_icon {
					display: block;
					width: $iconWidth;
					height: $iconHeight;
					@if ($direction == 'inline') {
						flex: 0 0 auto;
					}
				}
				& > .common_btn_text {
					display: block;
					@if ($direction == 'inline') {
						flex: 1 1 auto;
					}
					@if ($position == 'icon_left') {
						padding-left: #{$iconWidth};
						text-indent: -#{$iconWidth};
						text-align: center;
					}
				}
			}
		}
	}
}
// ポップアップメニュー
@mixin common_popup ($borderColor) {
	.common_popup {
		&.common_popup_btn {
			display: inline-block;
			vertical-align: top;
			& > a {
				display: block;
			 }
		}
		&.common_popup_content {
			position: absolute;
			z-index: $z_index_lv3;
			& > .inner {
				position: relative;
				z-index: $base_z_index;
				padding: 10px;
				border-radius: 10px;
				border: solid 1px $borderColor;
				& > .common_popup_tri {
					position: absolute;
					z-index: $z_index_lv2;
					width: 9px;
					height: 18px;
					& > .tri {
						fill: $white;
						stroke: $base_color;
						d: path('M 0 0 L 8 8 L 0 16');
					}
				}
			}
		}
	}
}

// スマホ：メニューリスト
@mixin sp_menu_content ($width) {
	& > .sp_menu_close_btn {
		display: none;
		position: fixed;
		top: 0;
		left: 0;
		z-index: $z_index_lv3;
		& > a {
			display: block;
			padding: 13px 15px;
			font-size: $little_large_font_size;
			color: $white;
			font-weight: bold;
		}
		&.active {
			display: block;
		}
	}
	& > .sp_menu_item {
		position: fixed;
		top: 0;
		right: -#{$width};
		z-index: $z_index_lv3;
		width: $width;
		height: 100%;
		background-color: #ffffff;
		overflow-y: auto;
	}
}